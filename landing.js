// indoor_event_live_score-main/landing.js
// Version 5.0 - Final Brand Integration & Full Functionality

// üéØ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶®: ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶§‡ßÅ‡¶® Google Apps Script URL ‡¶ü‡¶ø ‡¶™‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§
const API_URL = "https://script.google.com/macros/s/AKfycbxh2zabw1i80ieipn8JMPSwLswB1tbt2yy7TuqUUljBmfrTMcXc-v6MGpZzaY7wqKFyMg/exec"; // ‡¶è‡¶á URL ‡¶ü‡¶ø ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶ß‡¶æ‡¶™‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá‡•§
const GOOGLE_FORM_URL = "https://forms.gle/ouLjnUXDNcteXdRg6"; 
const SUBMISSION_DEADLINE = "‡ß¶‡ß¨ ‡¶Ö‡¶ï‡ßç‡¶ü‡ßã‡¶¨‡¶∞, ‡¶∞‡¶æ‡¶§ ‡ß≠ ‡¶ü‡¶æ"; 

// --- ‡¶∂‡¶ø‡¶ü‡ßá‡¶∞ ‡¶ï‡¶≤‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡¶ø‡¶≤ ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ---
const SHEET_HEADERS = {
    ROLL: 'Roll',
    NAME: 'Name',
    EVENT_NAME: 'EventName',
    BATCH_NAME: 'BatchName'
};

// --- ‡¶∂‡¶ø‡¶ü‡ßá‡¶∞ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ‡¶ï‡ßá ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶´‡¶ø‡¶≤‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ---
const EVENT_NAME_TO_FILTER = {
    '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡ßü‡¶æ‡¶§': 'kherat',
    '‡¶ï‡ßç‡¶¨‡ßá‡¶∞‡¶æ‡¶§ (‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡ßü‡¶æ‡¶§)': 'kherat',
    '‡¶Ü‡¶Ø‡¶æ‡¶®': 'azaan',
    '‡¶®‡¶æ‡¶∂‡¶ø‡¶¶': 'nasheed',
    '‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø ‡¶∏‡¶Ç‡¶ó‡ßÄ‡¶§': 'nasheed',
    '‡¶∞‡ßã‡¶≤ ‡¶™‡ßç‡¶≤‡ßá / ‡¶®‡¶æ‡¶ü‡¶ø‡¶ï‡¶æ': 'roleplay',
    '‡¶∞‡ßã‡¶≤ ‡¶™‡ßç‡¶≤‡ßá': 'roleplay',
    '‡¶è‡¶ï‡¶æ‡¶°‡ßá‡¶Æ‡¶ø‡¶ï ‡¶ï‡ßÅ‡¶á‡¶ú': 'quiz',
    '‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶ó‡ßá‡¶Æ': 'communication',
};

// --- ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶ø‡ßü‡¶Æ‡¶æ‡¶¨‡¶≤‡ßÄ (‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ PDF ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡ßá‡¶ì‡ßü‡¶æ) ---
const EVENT_RULES = {
    "all": { 
        name: "‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶æ‡¶ô‡ßç‡¶ó ‡¶®‡¶ø‡ßü‡¶Æ‡¶æ‡¶¨‡¶≤‡ßÄ ‡¶ì ‡¶∏‡ßç‡¶ï‡ßã‡¶∞‡¶ø‡¶Ç", 
        rules: "‡¶∏‡¶ï‡¶≤ ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶∂‡ßá‡¶∑‡ßá ‡¶Ø‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö‡ßá‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßá‡¶∂‡¶ø ‡¶π‡¶¨‡ßá, ‡¶∏‡ßá‡¶á ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö‡¶ï‡ßá \"‡¶ö‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™‡¶ø‡¶Ø‡¶º‡¶®\" ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶ò‡ßã‡¶∑‡¶£‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá‡•§ ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡ß® ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßá ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§", 
        players: "‡¶è‡¶ï‡¶ú‡¶® ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡ßÄ ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡ß©‡¶ü‡¶ø ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü‡ßá ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡•§", 
        submissionOpen: true 
    },
    "kherat": { 
        name: "‡¶ï‡ßç‡¶¨‡ßá‡¶∞‡¶æ‡¶§ (‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§)", 
        rules: "‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶è‡¶ï‡¶ï ‡¶™‡¶∞‡¶ø‡¶¨‡ßá‡¶∂‡¶®‡¶æ‡•§ ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶•‡ßá‡¶ï‡ßá ‡¶ï‡¶Æ‡¶™‡¶ï‡ßç‡¶∑‡ßá ‡ßß ‡¶ú‡¶® ‡¶Ü‡¶≤‡ßá‡¶Æ ‡¶è‡¶¨‡¶Ç ‡ßß ‡¶ú‡¶® ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡ßÄ ‡¶Ö‡¶Ç‡¶∂ ‡¶®‡ßá‡¶¨‡ßá‡¶®‡•§ ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï‡ßá ‡¶§‡¶ø‡¶≤‡¶æ‡¶ì‡ßü‡¶æ‡¶§‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡ß© ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶∏‡¶Æ‡ßü ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§", 
        players: "‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶•‡ßá‡¶ï‡ßá ‡ß® ‡¶ú‡¶® (‡ßß‡¶ú‡¶® ‡¶ú‡ßá‡¶®‡¶æ‡¶∞‡ßá‡¶≤ ‡¶•‡¶æ‡¶ï‡¶æ ‡¶¨‡¶æ‡¶ß‡ßç‡¶Ø‡¶§‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï)‡•§", 
        submissionOpen: true 
    },
    "azaan": { 
        name: "‡¶Ü‡¶Ø‡¶æ‡¶®", 
        rules: "‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶è‡¶ï‡¶ï ‡¶™‡¶∞‡¶ø‡¶¨‡ßá‡¶∂‡¶®‡¶æ‡•§ ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶•‡ßá‡¶ï‡ßá ‡ß® ‡¶ú‡¶® ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡ßÄ ‡¶Ö‡¶Ç‡¶∂ ‡¶®‡ßá‡¶¨‡ßá‡¶®‡•§ ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡ßÄ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßÇ‡¶∞‡ßç‡¶£‡¶æ‡¶ô‡ßç‡¶ó ‡¶Ü‡¶Ø‡¶æ‡¶® ‡¶¶‡ßá‡¶¨‡ßá‡¶®‡•§", 
        players: "‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶•‡ßá‡¶ï‡ßá ‡ß® ‡¶ú‡¶®‡•§", 
        submissionOpen: true 
    },
    "nasheed": { 
        name: "‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶®‡¶æ‡¶∂‡¶ø‡¶¶", 
        rules: "‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶è‡¶ï‡¶ï ‡¶™‡¶∞‡¶ø‡¶¨‡ßá‡¶∂‡¶®‡¶æ‡•§ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶•‡ßá‡¶ï‡ßá ‡ß® ‡¶ú‡¶® ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡ßÄ ‡¶Ö‡¶Ç‡¶∂ ‡¶®‡ßá‡¶¨‡ßá‡¶®‡•§ ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶∏‡¶Æ‡¶Ø‡¶º ‡ß© ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡•§", 
        players: "‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶•‡ßá‡¶ï‡ßá ‡ß® ‡¶ú‡¶®‡•§", 
        submissionOpen: true 
    },
    "roleplay": { 
        name: "‡¶∞‡ßã‡¶≤ ‡¶™‡ßç‡¶≤‡ßá (‡¶§‡¶æ‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï ‡¶Ö‡¶≠‡¶ø‡¶®‡ßü)", 
        rules: "‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º‡¶¨‡¶∏‡ßç‡¶§‡ßÅ ‡¶§‡¶æ‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶¨‡ßá (‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶ü‡ßç‡¶∞‡ßá‡¶®‡ßá‡¶∞ ‡¶π‡¶ï‡¶æ‡¶∞, ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø)‡•§ ‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶∏‡¶Æ‡¶Ø‡¶º ‡ß© ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡•§", 
        players: "‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶•‡ßá‡¶ï‡ßá ‡ß® ‡¶ú‡¶®‡•§", 
        submissionOpen: true 
    },
    "quiz": { 
        name: "‡¶è‡¶ï‡¶æ‡¶°‡ßá‡¶Æ‡¶ø‡¶ï ‡¶ï‡ßÅ‡¶á‡¶ú", 
        rules: "‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º‡¶¨‡¶∏‡ßç‡¶§‡ßÅ: ‡¶è‡¶Æ‡¶è‡¶∏ ‡¶è‡¶ï‡ßç‡¶∏‡ßá‡¶≤, ‡¶è‡¶Æ‡¶è‡¶∏ ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶°, ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡ßá‡¶ü‡¶ø‡¶Ç, ‡¶è‡¶Ü‡¶á ‡¶ü‡ßÅ‡¶≤‡¶∏, ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º‡ßá Kahoot ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ‡ßá ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶π‡¶¨‡ßá‡•§", 
        players: "‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶•‡ßá‡¶ï‡ßá ‡ß´ ‡¶ú‡¶®‡•§", 
        submissionOpen: true 
    },
    "communication": { 
        name: "‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶ó‡ßá‡¶Æ (‡¶Ö‡¶ô‡ßç‡¶ó‡¶≠‡¶ô‡ßç‡¶ó‡¶ø)", 
        rules: "‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶¶‡¶≤‡ßá ‡ßß‡ßß ‡¶ú‡¶® ‡¶ñ‡ßá‡¶≤‡ßã‡¶Ø‡¶º‡¶æ‡¶°‡¶º ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡¶®‡•§ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶ñ‡ßá‡¶≤‡ßã‡¶Ø‡¶º‡¶æ‡¶°‡¶º‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡¶ô‡ßç‡¶ó‡¶≠‡¶ô‡ßç‡¶ó‡¶ø ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã ‡¶π‡¶¨‡ßá, ‡¶Ø‡¶æ ‡¶§‡¶ø‡¶®‡¶ø ‡¶ï‡ßã‡¶®‡ßã ‡¶∂‡¶¨‡ßç‡¶¶ ‡¶õ‡¶æ‡¶°‡¶º‡¶æ ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶ñ‡ßá‡¶≤‡ßã‡¶Ø‡¶º‡¶æ‡¶°‡¶º‡¶ï‡ßá ‡¶¨‡ßã‡¶ù‡¶æ‡¶¨‡ßá‡¶®‡•§ ‡¶è‡¶á ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ‡¶ü‡¶ø ‡¶¶‡¶≤‡ßá‡¶∞ ‡¶∂‡ßá‡¶∑ ‡¶ñ‡ßá‡¶≤‡ßã‡¶Ø‡¶º‡¶æ‡¶°‡¶º ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶ö‡¶≤‡¶¨‡ßá‡•§", 
        players: "‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö ‡¶•‡ßá‡¶ï‡ßá ‡ßß‡ßß ‡¶ú‡¶®‡•§", 
        submissionOpen: true 
    },
};

let allParticipantsData = []; 

// Google Sheet ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶°‡ßá‡¶ü‡¶æ ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
function processFetchedData(rawData) {
    const participants = [];
    rawData.forEach(row => {
        const name = row[SHEET_HEADERS.NAME] || 'N/A';
        const roll = row[SHEET_HEADERS.ROLL] || 'N/A';
        const batch = row[SHEET_HEADERS.BATCH_NAME] || 'N/A';
        const rawEvent = row[SHEET_HEADERS.EVENT_NAME] || 'Unknown';
        const filterClass = EVENT_NAME_TO_FILTER[rawEvent.trim()] || 'unknown'; 
        
        if (name && name.trim() !== '' && filterClass !== 'unknown') {
             participants.push({ name, roll, batch, eventTag: rawEvent, filterClass });
        }
    });
    return Array.from(new Map(participants.map(p => [`${p.name}-${p.batch}-${p.eventTag}`, p])).values());
}

// ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶ï‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶≤‡ßã‡¶° ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡¶®‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
async function fetchAndDisplayParticipants() {
    const grid = document.querySelector('.showcase-grid');
    if (!grid) return;

    try {
        if (API_URL === "YOUR_NEW_GOOGLE_APPS_SCRIPT_URL_HERE" || !API_URL) {
            throw new Error("API URL is not configured. Please deploy the Apps Script and update the URL in landing.js.");
        }
        const response = await fetch(API_URL);
        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
        
        const rawData = await response.json();
        if (rawData.error) throw new Error(rawData.error);

        allParticipantsData = processFetchedData(rawData); 
        
        grid.innerHTML = ''; // ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶∏‡ßç‡¶™‡¶ø‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶™‡¶∏‡¶æ‡¶∞‡¶£
        if(allParticipantsData.length === 0){
             grid.innerHTML = `<p class="text-center text-muted w-100">‡¶è‡¶ñ‡¶®‡ßã ‡¶ï‡ßã‡¶®‡ßã ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶ï‡¶æ‡¶∞‡ßÄ‡¶ï‡ßá ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡¶®‡¶ø‡•§</p>`;
        } else {
            buildParticipantCards();
        }
        filterSelection("all"); // ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶¨ ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã

    } catch (error) {
        console.error("Could not fetch participant data:", error);
        grid.innerHTML = `<div class="alert alert-danger w-100 mx-auto mt-4" style="background: #581515; border-color: #ff4d4d; color: #ffacac;" role="alert">
            <strong>‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø:</strong> ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶ï‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§ (${error.message})
        </div>`;
    }
}

// ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶ï‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶ï‡¶æ‡¶∞‡ßç‡¶° ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
function buildParticipantCards() {
    const grid = document.querySelector('.showcase-grid');
    grid.innerHTML = allParticipantsData.map(p => `
        <div class="participant-showcase-card filterDiv ${p.filterClass}">
            <span class="event-tag">${p.eventTag}</span>
            <span class="name">${p.name}</span>
            <span class="batch">${p.batch}</span>
            <span class="roll">‡¶∞‡ßã‡¶≤: ${p.roll}</span>
        </div>
    `).join('');
}

// ‡¶´‡¶ø‡¶≤‡ßç‡¶ü‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶ü‡¶® ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ï‡¶æ‡¶∞‡ßç‡¶° ‡¶ì ‡¶®‡¶ø‡ßü‡¶Æ‡¶æ‡¶¨‡¶≤‡ßÄ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
function filterSelection(c) {
    const eventNameElement = document.getElementById('current-event-name');
    const rulesContentElement = document.getElementById('event-rules-content');
    const eventData = EVENT_RULES[c] || EVENT_RULES['all'];
    
    let rulesHtml = `
        <h5 class="mt-4 fw-bold" style="color: var(--text-bright);">‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶®‡¶ø‡ßü‡¶Æ‡¶æ‡¶¨‡¶≤‡ßÄ:</h5>
        <ul class="list-unstyled">
            <li><i class="bi bi-info-circle-fill me-2" style="color: var(--brand-light-green);"></i> ${eventData.rules}</li>
            <li><i class="bi bi-person-circle me-2" style="color: var(--brand-light-green);"></i> ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£‡ßá‡¶∞ ‡¶ï‡ßã‡¶ü‡¶æ: ${eventData.players}</li>
            <li><i class="bi bi-award-fill me-2" style="color: var(--brand-orange);"></i> ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ: ‡ßß‡¶Æ: ‡ßß‡ß¶, ‡ß®‡ßü: ‡ß≠, ‡ß©‡ßü: ‡ß´ ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü‡•§</li>
        </ul>
    `;
    
    if (eventData.submissionOpen) {
        rulesHtml += `
            <hr class="my-4" style="border-color: #333;">
            <p class="fw-bold mb-2" style="color: var(--brand-orange);">‡¶®‡¶æ‡¶Æ ‡¶ú‡¶Æ‡¶æ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∂‡ßá‡¶∑ ‡¶∏‡¶Æ‡¶Ø‡¶º: ${SUBMISSION_DEADLINE}</p>
            <a href="${GOOGLE_FORM_URL}" target="_blank" class="btn btn-primary hero-btn-main">
                <i class="bi bi-box-arrow-in-right"></i> ‡¶™‡ßç‡¶≤‡ßá‡ßü‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶ú‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶®
            </a>
        `;
    }

    eventNameElement.textContent = eventData.name;
    rulesContentElement.innerHTML = rulesHtml;

    document.querySelectorAll('.filterDiv').forEach(card => {
        card.classList.remove('visible');
        if (c === 'all' || card.classList.contains(c)) {
            card.classList.add('visible');
        }
    });
}

// ‡¶™‡ßá‡¶ú ‡¶≤‡ßã‡¶° ‡¶π‡¶≤‡ßá ‡¶è‡¶á ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ó‡ßÅ‡¶≤‡ßã ‡¶∞‡¶æ‡¶® ‡¶π‡¶¨‡ßá
document.addEventListener('DOMContentLoaded', () => {
    fetchAndDisplayParticipants(); 
    
    const filterButtons = document.querySelectorAll('.filter-btn');
    filterButtons.forEach(button => {
        button.addEventListener('click', (e) => {
            e.preventDefault();
            filterButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
            const filterValue = button.getAttribute('data-filter');
            filterSelection(filterValue); 
        });
    });
});